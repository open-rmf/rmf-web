name: Nightly
on:
  schedule:
    # 2am SGT
    - cron: '0 18 * * *'
jobs:
  build-docker-images:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: ${{ github.repository }}/rmf
          tags: nightly
          path: docker/rmf
  unit-test:
    name: Unit Test
    needs: build-docker-images
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0, lts
          node-version: 12.x # optional, default is 10.x
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
          registry-url: # optional
          # Optional scope for authenticating against scoped registries
          scope: # optional
      - run: npm ci
      - run: npm run build # linter runs here
      - run: npm run test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  e2e-test:
    name: End-to-End Test
    needs: build-docker-images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Prepare
        run: |
          npm ci
          docker login https://docker.pkg.github.com -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}
          npm run sync:docker
      - name: e2e test
        env:
          CI: true
        # retry the test twice if it fails
        run: |
          npm run test:e2e:docker || npm run test:e2e:docker || npm run test:e2e:docker
