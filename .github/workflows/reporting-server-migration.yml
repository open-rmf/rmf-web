name: PostgreSQL service example
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-20.04
    # Docker Hub image that `container-job` executes in
    container: 
      image: docker.pkg.github.com/open-rmf/rmf-web/e2e
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Add the current IP address, long hostname and short hostname record to /etc/hosts file
        run: |
          echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: apt-get update && apt-get install -y curl python3-pip pipenv 
      - name: Install python dependencies
        run: pip3 install fastapi uvicorn tortoise-orm pydantic aerich asyncpg 
      - name: Copy migrations 
        run: cp -r packages/reporting-server/migrations/ packages/reporting-server/test_migration/migrations/

      - name: Connect to PostgreSQL and run migrations
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: cd packages/reporting-server/test_migration/ && aerich upgrade
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          POSTGRES_DB: postgres

