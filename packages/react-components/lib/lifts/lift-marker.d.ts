import React from 'react';
import * as RmfModels from 'rmf-models';
export declare const useLiftMarkerStyles: (
  props?: any,
) => import('@material-ui/styles').ClassNameMap<
  'unknown' | 'moving' | 'onCurrentFloor' | 'emergency' | 'fire' | 'offLine' | 'human'
>;
export interface LiftMarkerProps extends Omit<React.SVGProps<SVGGElement>, 'onClick'> {
  lift: RmfModels.Lift;
  liftState?: RmfModels.LiftState;
  /**
   * Whether the component should perform a translate transform to put it inline with the position
   * in RMF.
   *
   * default: true
   */
  translate?: boolean;
  variant?: keyof ReturnType<typeof useLiftMarkerStyles>;
  onClick?(event: React.MouseEvent, lift: RmfModels.Lift): void;
}
export declare const LiftMarker: React.ForwardRefExoticComponent<
  Pick<
    LiftMarkerProps,
    | 'string'
    | 'clipPath'
    | 'color'
    | 'cursor'
    | 'direction'
    | 'display'
    | 'filter'
    | 'fontFamily'
    | 'fontSize'
    | 'fontSizeAdjust'
    | 'fontStretch'
    | 'fontStyle'
    | 'fontVariant'
    | 'fontWeight'
    | 'height'
    | 'imageRendering'
    | 'letterSpacing'
    | 'opacity'
    | 'order'
    | 'paintOrder'
    | 'pointerEvents'
    | 'rotate'
    | 'scale'
    | 'textRendering'
    | 'transform'
    | 'translate'
    | 'unicodeBidi'
    | 'visibility'
    | 'width'
    | 'wordSpacing'
    | 'writingMode'
    | 'mask'
    | 'offset'
    | 'overflow'
    | 'textDecoration'
    | 'azimuth'
    | 'clip'
    | 'alignmentBaseline'
    | 'baselineShift'
    | 'clipRule'
    | 'colorInterpolation'
    | 'colorRendering'
    | 'dominantBaseline'
    | 'fill'
    | 'fillOpacity'
    | 'fillRule'
    | 'floodColor'
    | 'floodOpacity'
    | 'glyphOrientationVertical'
    | 'lightingColor'
    | 'markerEnd'
    | 'markerMid'
    | 'markerStart'
    | 'shapeRendering'
    | 'stopColor'
    | 'stopOpacity'
    | 'stroke'
    | 'strokeDasharray'
    | 'strokeDashoffset'
    | 'strokeLinecap'
    | 'strokeLinejoin'
    | 'strokeMiterlimit'
    | 'strokeOpacity'
    | 'strokeWidth'
    | 'textAnchor'
    | 'vectorEffect'
    | 'end'
    | 'local'
    | 'style'
    | 'x'
    | 'y'
    | 'alphabetic'
    | 'hanging'
    | 'ideographic'
    | 'mathematical'
    | 'className'
    | 'id'
    | 'lang'
    | 'tabIndex'
    | 'role'
    | 'aria-activedescendant'
    | 'aria-atomic'
    | 'aria-autocomplete'
    | 'aria-busy'
    | 'aria-checked'
    | 'aria-colcount'
    | 'aria-colindex'
    | 'aria-colspan'
    | 'aria-controls'
    | 'aria-current'
    | 'aria-describedby'
    | 'aria-details'
    | 'aria-disabled'
    | 'aria-dropeffect'
    | 'aria-errormessage'
    | 'aria-expanded'
    | 'aria-flowto'
    | 'aria-grabbed'
    | 'aria-haspopup'
    | 'aria-hidden'
    | 'aria-invalid'
    | 'aria-keyshortcuts'
    | 'aria-label'
    | 'aria-labelledby'
    | 'aria-level'
    | 'aria-live'
    | 'aria-modal'
    | 'aria-multiline'
    | 'aria-multiselectable'
    | 'aria-orientation'
    | 'aria-owns'
    | 'aria-placeholder'
    | 'aria-posinset'
    | 'aria-pressed'
    | 'aria-readonly'
    | 'aria-relevant'
    | 'aria-required'
    | 'aria-roledescription'
    | 'aria-rowcount'
    | 'aria-rowindex'
    | 'aria-rowspan'
    | 'aria-selected'
    | 'aria-setsize'
    | 'aria-sort'
    | 'aria-valuemax'
    | 'aria-valuemin'
    | 'aria-valuenow'
    | 'aria-valuetext'
    | 'children'
    | 'dangerouslySetInnerHTML'
    | 'onCopy'
    | 'onCopyCapture'
    | 'onCut'
    | 'onCutCapture'
    | 'onPaste'
    | 'onPasteCapture'
    | 'onCompositionEnd'
    | 'onCompositionEndCapture'
    | 'onCompositionStart'
    | 'onCompositionStartCapture'
    | 'onCompositionUpdate'
    | 'onCompositionUpdateCapture'
    | 'onFocus'
    | 'onFocusCapture'
    | 'onBlur'
    | 'onBlurCapture'
    | 'onChange'
    | 'onChangeCapture'
    | 'onBeforeInput'
    | 'onBeforeInputCapture'
    | 'onInput'
    | 'onInputCapture'
    | 'onReset'
    | 'onResetCapture'
    | 'onSubmit'
    | 'onSubmitCapture'
    | 'onInvalid'
    | 'onInvalidCapture'
    | 'onLoad'
    | 'onLoadCapture'
    | 'onError'
    | 'onErrorCapture'
    | 'onKeyDown'
    | 'onKeyDownCapture'
    | 'onKeyPress'
    | 'onKeyPressCapture'
    | 'onKeyUp'
    | 'onKeyUpCapture'
    | 'onAbort'
    | 'onAbortCapture'
    | 'onCanPlay'
    | 'onCanPlayCapture'
    | 'onCanPlayThrough'
    | 'onCanPlayThroughCapture'
    | 'onDurationChange'
    | 'onDurationChangeCapture'
    | 'onEmptied'
    | 'onEmptiedCapture'
    | 'onEncrypted'
    | 'onEncryptedCapture'
    | 'onEnded'
    | 'onEndedCapture'
    | 'onLoadedData'
    | 'onLoadedDataCapture'
    | 'onLoadedMetadata'
    | 'onLoadedMetadataCapture'
    | 'onLoadStart'
    | 'onLoadStartCapture'
    | 'onPause'
    | 'onPauseCapture'
    | 'onPlay'
    | 'onPlayCapture'
    | 'onPlaying'
    | 'onPlayingCapture'
    | 'onProgress'
    | 'onProgressCapture'
    | 'onRateChange'
    | 'onRateChangeCapture'
    | 'onSeeked'
    | 'onSeekedCapture'
    | 'onSeeking'
    | 'onSeekingCapture'
    | 'onStalled'
    | 'onStalledCapture'
    | 'onSuspend'
    | 'onSuspendCapture'
    | 'onTimeUpdate'
    | 'onTimeUpdateCapture'
    | 'onVolumeChange'
    | 'onVolumeChangeCapture'
    | 'onWaiting'
    | 'onWaitingCapture'
    | 'onAuxClick'
    | 'onAuxClickCapture'
    | 'onClick'
    | 'onClickCapture'
    | 'onContextMenu'
    | 'onContextMenuCapture'
    | 'onDoubleClick'
    | 'onDoubleClickCapture'
    | 'onDrag'
    | 'onDragCapture'
    | 'onDragEnd'
    | 'onDragEndCapture'
    | 'onDragEnter'
    | 'onDragEnterCapture'
    | 'onDragExit'
    | 'onDragExitCapture'
    | 'onDragLeave'
    | 'onDragLeaveCapture'
    | 'onDragOver'
    | 'onDragOverCapture'
    | 'onDragStart'
    | 'onDragStartCapture'
    | 'onDrop'
    | 'onDropCapture'
    | 'onMouseDown'
    | 'onMouseDownCapture'
    | 'onMouseEnter'
    | 'onMouseLeave'
    | 'onMouseMove'
    | 'onMouseMoveCapture'
    | 'onMouseOut'
    | 'onMouseOutCapture'
    | 'onMouseOver'
    | 'onMouseOverCapture'
    | 'onMouseUp'
    | 'onMouseUpCapture'
    | 'onSelect'
    | 'onSelectCapture'
    | 'onTouchCancel'
    | 'onTouchCancelCapture'
    | 'onTouchEnd'
    | 'onTouchEndCapture'
    | 'onTouchMove'
    | 'onTouchMoveCapture'
    | 'onTouchStart'
    | 'onTouchStartCapture'
    | 'onPointerDown'
    | 'onPointerDownCapture'
    | 'onPointerMove'
    | 'onPointerMoveCapture'
    | 'onPointerUp'
    | 'onPointerUpCapture'
    | 'onPointerCancel'
    | 'onPointerCancelCapture'
    | 'onPointerEnter'
    | 'onPointerEnterCapture'
    | 'onPointerLeave'
    | 'onPointerLeaveCapture'
    | 'onPointerOver'
    | 'onPointerOverCapture'
    | 'onPointerOut'
    | 'onPointerOutCapture'
    | 'onGotPointerCapture'
    | 'onGotPointerCaptureCapture'
    | 'onLostPointerCapture'
    | 'onLostPointerCaptureCapture'
    | 'onScroll'
    | 'onScrollCapture'
    | 'onWheel'
    | 'onWheelCapture'
    | 'onAnimationStart'
    | 'onAnimationStartCapture'
    | 'onAnimationEnd'
    | 'onAnimationEndCapture'
    | 'onAnimationIteration'
    | 'onAnimationIterationCapture'
    | 'onTransitionEnd'
    | 'onTransitionEndCapture'
    | 'path'
    | 'spacing'
    | 'in'
    | 'variant'
    | 'key'
    | 'max'
    | 'media'
    | 'method'
    | 'min'
    | 'name'
    | 'target'
    | 'type'
    | 'crossOrigin'
    | 'accentHeight'
    | 'accumulate'
    | 'additive'
    | 'allowReorder'
    | 'amplitude'
    | 'arabicForm'
    | 'ascent'
    | 'attributeName'
    | 'attributeType'
    | 'autoReverse'
    | 'baseFrequency'
    | 'baseProfile'
    | 'bbox'
    | 'begin'
    | 'bias'
    | 'by'
    | 'calcMode'
    | 'capHeight'
    | 'clipPathUnits'
    | 'colorInterpolationFilters'
    | 'colorProfile'
    | 'contentScriptType'
    | 'contentStyleType'
    | 'cx'
    | 'cy'
    | 'd'
    | 'decelerate'
    | 'descent'
    | 'diffuseConstant'
    | 'divisor'
    | 'dur'
    | 'dx'
    | 'dy'
    | 'edgeMode'
    | 'elevation'
    | 'enableBackground'
    | 'exponent'
    | 'externalResourcesRequired'
    | 'filterRes'
    | 'filterUnits'
    | 'focusable'
    | 'format'
    | 'from'
    | 'fx'
    | 'fy'
    | 'g1'
    | 'g2'
    | 'glyphName'
    | 'glyphOrientationHorizontal'
    | 'glyphRef'
    | 'gradientTransform'
    | 'gradientUnits'
    | 'horizAdvX'
    | 'horizOriginX'
    | 'href'
    | 'in2'
    | 'intercept'
    | 'k1'
    | 'k2'
    | 'k3'
    | 'k4'
    | 'k'
    | 'kernelMatrix'
    | 'kernelUnitLength'
    | 'kerning'
    | 'keyPoints'
    | 'keySplines'
    | 'keyTimes'
    | 'lengthAdjust'
    | 'limitingConeAngle'
    | 'markerHeight'
    | 'markerUnits'
    | 'markerWidth'
    | 'maskContentUnits'
    | 'maskUnits'
    | 'mode'
    | 'numOctaves'
    | 'operator'
    | 'orient'
    | 'orientation'
    | 'origin'
    | 'overlinePosition'
    | 'overlineThickness'
    | 'panose1'
    | 'pathLength'
    | 'patternContentUnits'
    | 'patternTransform'
    | 'patternUnits'
    | 'points'
    | 'pointsAtX'
    | 'pointsAtY'
    | 'pointsAtZ'
    | 'preserveAlpha'
    | 'preserveAspectRatio'
    | 'primitiveUnits'
    | 'r'
    | 'radius'
    | 'refX'
    | 'refY'
    | 'renderingIntent'
    | 'repeatCount'
    | 'repeatDur'
    | 'requiredExtensions'
    | 'requiredFeatures'
    | 'restart'
    | 'result'
    | 'rx'
    | 'ry'
    | 'seed'
    | 'slope'
    | 'specularConstant'
    | 'specularExponent'
    | 'speed'
    | 'spreadMethod'
    | 'startOffset'
    | 'stdDeviation'
    | 'stemh'
    | 'stemv'
    | 'stitchTiles'
    | 'strikethroughPosition'
    | 'strikethroughThickness'
    | 'surfaceScale'
    | 'systemLanguage'
    | 'tableValues'
    | 'targetX'
    | 'targetY'
    | 'textLength'
    | 'to'
    | 'u1'
    | 'u2'
    | 'underlinePosition'
    | 'underlineThickness'
    | 'unicode'
    | 'unicodeRange'
    | 'unitsPerEm'
    | 'vAlphabetic'
    | 'values'
    | 'version'
    | 'vertAdvY'
    | 'vertOriginX'
    | 'vertOriginY'
    | 'vHanging'
    | 'vIdeographic'
    | 'viewBox'
    | 'viewTarget'
    | 'vMathematical'
    | 'widths'
    | 'x1'
    | 'x2'
    | 'xChannelSelector'
    | 'xHeight'
    | 'xlinkActuate'
    | 'xlinkArcrole'
    | 'xlinkHref'
    | 'xlinkRole'
    | 'xlinkShow'
    | 'xlinkTitle'
    | 'xlinkType'
    | 'xmlBase'
    | 'xmlLang'
    | 'xmlns'
    | 'xmlnsXlink'
    | 'xmlSpace'
    | 'y1'
    | 'y2'
    | 'yChannelSelector'
    | 'z'
    | 'zoomAndPan'
    | 'lift'
    | 'liftState'
  > &
    React.RefAttributes<SVGGElement>
>;
export default LiftMarker;
