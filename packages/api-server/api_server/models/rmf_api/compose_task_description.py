# generated by datamodel-codegen:
#   filename:  compose_task_description.json

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class ActivityDescription(BaseModel):
    category: str = Field(..., description="The category of this phase's activity.")


class Phase1(BaseModel):
    activity: ActivityDescription
    on_cancel: Optional[List[ActivityDescription]] = Field(
        None,
        description="A list of activities to perform if the task is canceled during this phase (each activity is given its own phase which can be skipped but not canceled).",
    )


class ComposeTaskDescription(BaseModel):
    category: str = Field(
        ..., description="Indicate that this is a composed task description"
    )
    phases: List[Phase1] = Field(
        ...,
        description="List the phases of the task in the order that they should be performed.",
    )
