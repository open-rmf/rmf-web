# generated by datamodel-codegen:
#   filename:  token_response.json

from __future__ import annotations

from typing import List, Union

from pydantic import BaseModel, Field, RootModel
from typing_extensions import Literal

from . import error


class Success(RootModel[Literal[True]]):
    root: Literal[True] = Field(..., description="The request was successful")


class Failure(RootModel[Literal[False]]):
    root: Literal[False] = Field(..., description="The request failed")


class TokenResponse1(BaseModel):
    success: Success
    token: str = Field(
        ...,
        description="A token for the request. The value of this token is unique within the scope of this request and can be used by other requests to reference this request.",
    )


class TokenResponse2(BaseModel):
    success: Failure
    errors: List[error.Error] = Field(
        ..., description="Any error messages explaining why the request failed."
    )


class TokenResponse(RootModel[Union[TokenResponse1, TokenResponse2]]):
    root: Union[TokenResponse1, TokenResponse2] = Field(
        ...,
        description="Template for defining a response message that provides a token upon success or errors upon failure",
        title="Token Response",
    )
